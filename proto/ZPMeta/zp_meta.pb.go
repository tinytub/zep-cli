// Code generated by protoc-gen-go.
// source: zp_meta.proto
// DO NOT EDIT!

/*
Package ZPMeta is a generated protocol buffer package.

It is generated from these files:
	zp_meta.proto

It has these top-level messages:
	Node
	NodeStatus
	Nodes
	MetaNodes
	Partitions
	TableName
	Table
	BasicCmdUnit
	SyncOffset
	MetaCmd
	MetaCmdResponse
*/
package ZPMeta

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_OK       StatusCode = 0
	StatusCode_NOTFOUND StatusCode = 1
	StatusCode_ERROR    StatusCode = 2
)

var StatusCode_name = map[int32]string{
	0: "OK",
	1: "NOTFOUND",
	2: "ERROR",
}
var StatusCode_value = map[string]int32{
	"OK":       0,
	"NOTFOUND": 1,
	"ERROR":    2,
}

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}
func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (x *StatusCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatusCode_value, data, "StatusCode")
	if err != nil {
		return err
	}
	*x = StatusCode(value)
	return nil
}
func (StatusCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Type int32

const (
	Type_PING        Type = 1
	Type_PULL        Type = 2
	Type_INIT        Type = 3
	Type_SETMASTER   Type = 4
	Type_ADDSLAVE    Type = 5
	Type_REMOVESLAVE Type = 6
	Type_LISTTABLE   Type = 7
	Type_LISTNODE    Type = 8
	Type_LISTMETA    Type = 9
	Type_DROPTABLE   Type = 10
)

var Type_name = map[int32]string{
	1:  "PING",
	2:  "PULL",
	3:  "INIT",
	4:  "SETMASTER",
	5:  "ADDSLAVE",
	6:  "REMOVESLAVE",
	7:  "LISTTABLE",
	8:  "LISTNODE",
	9:  "LISTMETA",
	10: "DROPTABLE",
}
var Type_value = map[string]int32{
	"PING":        1,
	"PULL":        2,
	"INIT":        3,
	"SETMASTER":   4,
	"ADDSLAVE":    5,
	"REMOVESLAVE": 6,
	"LISTTABLE":   7,
	"LISTNODE":    8,
	"LISTMETA":    9,
	"DROPTABLE":   10,
}

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}
func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (x *Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_value, data, "Type")
	if err != nil {
		return err
	}
	*x = Type(value)
	return nil
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PState int32

const (
	PState_ACTIVE PState = 1
	PState_STUCK  PState = 2
)

var PState_name = map[int32]string{
	1: "ACTIVE",
	2: "STUCK",
}
var PState_value = map[string]int32{
	"ACTIVE": 1,
	"STUCK":  2,
}

func (x PState) Enum() *PState {
	p := new(PState)
	*p = x
	return p
}
func (x PState) String() string {
	return proto.EnumName(PState_name, int32(x))
}
func (x *PState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PState_value, data, "PState")
	if err != nil {
		return err
	}
	*x = PState(value)
	return nil
}
func (PState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Node struct {
	Ip               *string `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Node) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Node) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type NodeStatus struct {
	Node             *Node  `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Status           *int32 `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NodeStatus) Reset()                    { *m = NodeStatus{} }
func (m *NodeStatus) String() string            { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()               {}
func (*NodeStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NodeStatus) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *NodeStatus) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type Nodes struct {
	Nodes            []*NodeStatus `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Nodes) Reset()                    { *m = Nodes{} }
func (m *Nodes) String() string            { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()               {}
func (*Nodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Nodes) GetNodes() []*NodeStatus {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type MetaNodes struct {
	Followers        []*Node `protobuf:"bytes,1,rep,name=followers" json:"followers,omitempty"`
	Leader           *Node   `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetaNodes) Reset()                    { *m = MetaNodes{} }
func (m *MetaNodes) String() string            { return proto.CompactTextString(m) }
func (*MetaNodes) ProtoMessage()               {}
func (*MetaNodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MetaNodes) GetFollowers() []*Node {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *MetaNodes) GetLeader() *Node {
	if m != nil {
		return m.Leader
	}
	return nil
}

type Partitions struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	State            *PState `protobuf:"varint,2,req,name=state,enum=ZPMeta.PState" json:"state,omitempty"`
	Master           *Node   `protobuf:"bytes,3,req,name=master" json:"master,omitempty"`
	Slaves           []*Node `protobuf:"bytes,4,rep,name=slaves" json:"slaves,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Partitions) Reset()                    { *m = Partitions{} }
func (m *Partitions) String() string            { return proto.CompactTextString(m) }
func (*Partitions) ProtoMessage()               {}
func (*Partitions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Partitions) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Partitions) GetState() PState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return PState_ACTIVE
}

func (m *Partitions) GetMaster() *Node {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *Partitions) GetSlaves() []*Node {
	if m != nil {
		return m.Slaves
	}
	return nil
}

type TableName struct {
	Name             []string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TableName) Reset()                    { *m = TableName{} }
func (m *TableName) String() string            { return proto.CompactTextString(m) }
func (*TableName) ProtoMessage()               {}
func (*TableName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TableName) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type Table struct {
	Name             *string       `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Partitions       []*Partitions `protobuf:"bytes,2,rep,name=partitions" json:"partitions,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Table) Reset()                    { *m = Table{} }
func (m *Table) String() string            { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()               {}
func (*Table) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Table) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Table) GetPartitions() []*Partitions {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type BasicCmdUnit struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Partition        *int32  `protobuf:"varint,2,req,name=partition" json:"partition,omitempty"`
	Node             *Node   `protobuf:"bytes,3,req,name=node" json:"node,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BasicCmdUnit) Reset()                    { *m = BasicCmdUnit{} }
func (m *BasicCmdUnit) String() string            { return proto.CompactTextString(m) }
func (*BasicCmdUnit) ProtoMessage()               {}
func (*BasicCmdUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BasicCmdUnit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BasicCmdUnit) GetPartition() int32 {
	if m != nil && m.Partition != nil {
		return *m.Partition
	}
	return 0
}

func (m *BasicCmdUnit) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type SyncOffset struct {
	TableName        *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Partition        *int32  `protobuf:"varint,2,req,name=partition" json:"partition,omitempty"`
	Filenum          *int32  `protobuf:"varint,3,opt,name=filenum" json:"filenum,omitempty"`
	Offset           *int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncOffset) Reset()                    { *m = SyncOffset{} }
func (m *SyncOffset) String() string            { return proto.CompactTextString(m) }
func (*SyncOffset) ProtoMessage()               {}
func (*SyncOffset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SyncOffset) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *SyncOffset) GetPartition() int32 {
	if m != nil && m.Partition != nil {
		return *m.Partition
	}
	return 0
}

func (m *SyncOffset) GetFilenum() int32 {
	if m != nil && m.Filenum != nil {
		return *m.Filenum
	}
	return 0
}

func (m *SyncOffset) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

type MetaCmd struct {
	Type             *Type                `protobuf:"varint,1,req,name=type,enum=ZPMeta.Type" json:"type,omitempty"`
	Ping             *MetaCmd_Ping        `protobuf:"bytes,2,opt,name=ping" json:"ping,omitempty"`
	Pull             *MetaCmd_Pull        `protobuf:"bytes,3,opt,name=pull" json:"pull,omitempty"`
	Init             *MetaCmd_Init        `protobuf:"bytes,4,opt,name=init" json:"init,omitempty"`
	SetMaster        *MetaCmd_SetMaster   `protobuf:"bytes,5,opt,name=set_master,json=setMaster" json:"set_master,omitempty"`
	AddSlave         *MetaCmd_AddSlave    `protobuf:"bytes,6,opt,name=add_slave,json=addSlave" json:"add_slave,omitempty"`
	RemoveSlave      *MetaCmd_RemoveSlave `protobuf:"bytes,7,opt,name=remove_slave,json=removeSlave" json:"remove_slave,omitempty"`
	DropTable        *MetaCmd_DropTable   `protobuf:"bytes,8,opt,name=drop_table,json=dropTable" json:"drop_table,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *MetaCmd) Reset()                    { *m = MetaCmd{} }
func (m *MetaCmd) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd) ProtoMessage()               {}
func (*MetaCmd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MetaCmd) GetType() Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Type_PING
}

func (m *MetaCmd) GetPing() *MetaCmd_Ping {
	if m != nil {
		return m.Ping
	}
	return nil
}

func (m *MetaCmd) GetPull() *MetaCmd_Pull {
	if m != nil {
		return m.Pull
	}
	return nil
}

func (m *MetaCmd) GetInit() *MetaCmd_Init {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *MetaCmd) GetSetMaster() *MetaCmd_SetMaster {
	if m != nil {
		return m.SetMaster
	}
	return nil
}

func (m *MetaCmd) GetAddSlave() *MetaCmd_AddSlave {
	if m != nil {
		return m.AddSlave
	}
	return nil
}

func (m *MetaCmd) GetRemoveSlave() *MetaCmd_RemoveSlave {
	if m != nil {
		return m.RemoveSlave
	}
	return nil
}

func (m *MetaCmd) GetDropTable() *MetaCmd_DropTable {
	if m != nil {
		return m.DropTable
	}
	return nil
}

// Ping
type MetaCmd_Ping struct {
	Version          *int32        `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Node             *Node         `protobuf:"bytes,2,req,name=node" json:"node,omitempty"`
	Offset           []*SyncOffset `protobuf:"bytes,3,rep,name=offset" json:"offset,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MetaCmd_Ping) Reset()                    { *m = MetaCmd_Ping{} }
func (m *MetaCmd_Ping) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_Ping) ProtoMessage()               {}
func (*MetaCmd_Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *MetaCmd_Ping) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *MetaCmd_Ping) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *MetaCmd_Ping) GetOffset() []*SyncOffset {
	if m != nil {
		return m.Offset
	}
	return nil
}

// Pull
type MetaCmd_Pull struct {
	Node             *Node   `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetaCmd_Pull) Reset()                    { *m = MetaCmd_Pull{} }
func (m *MetaCmd_Pull) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_Pull) ProtoMessage()               {}
func (*MetaCmd_Pull) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 1} }

func (m *MetaCmd_Pull) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *MetaCmd_Pull) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// Init
type MetaCmd_Init struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Num              *int32  `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetaCmd_Init) Reset()                    { *m = MetaCmd_Init{} }
func (m *MetaCmd_Init) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_Init) ProtoMessage()               {}
func (*MetaCmd_Init) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 2} }

func (m *MetaCmd_Init) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MetaCmd_Init) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type MetaCmd_SetMaster struct {
	Basic            *BasicCmdUnit `protobuf:"bytes,1,req,name=basic" json:"basic,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MetaCmd_SetMaster) Reset()                    { *m = MetaCmd_SetMaster{} }
func (m *MetaCmd_SetMaster) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_SetMaster) ProtoMessage()               {}
func (*MetaCmd_SetMaster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 3} }

func (m *MetaCmd_SetMaster) GetBasic() *BasicCmdUnit {
	if m != nil {
		return m.Basic
	}
	return nil
}

type MetaCmd_AddSlave struct {
	Basic            *BasicCmdUnit `protobuf:"bytes,1,req,name=basic" json:"basic,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MetaCmd_AddSlave) Reset()                    { *m = MetaCmd_AddSlave{} }
func (m *MetaCmd_AddSlave) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_AddSlave) ProtoMessage()               {}
func (*MetaCmd_AddSlave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 4} }

func (m *MetaCmd_AddSlave) GetBasic() *BasicCmdUnit {
	if m != nil {
		return m.Basic
	}
	return nil
}

type MetaCmd_RemoveSlave struct {
	Basic            *BasicCmdUnit `protobuf:"bytes,1,req,name=basic" json:"basic,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MetaCmd_RemoveSlave) Reset()                    { *m = MetaCmd_RemoveSlave{} }
func (m *MetaCmd_RemoveSlave) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_RemoveSlave) ProtoMessage()               {}
func (*MetaCmd_RemoveSlave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 5} }

func (m *MetaCmd_RemoveSlave) GetBasic() *BasicCmdUnit {
	if m != nil {
		return m.Basic
	}
	return nil
}

type MetaCmd_DropTable struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetaCmd_DropTable) Reset()                    { *m = MetaCmd_DropTable{} }
func (m *MetaCmd_DropTable) String() string            { return proto.CompactTextString(m) }
func (*MetaCmd_DropTable) ProtoMessage()               {}
func (*MetaCmd_DropTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 6} }

func (m *MetaCmd_DropTable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type MetaCmdResponse struct {
	Type             *Type                      `protobuf:"varint,1,req,name=type,enum=ZPMeta.Type" json:"type,omitempty"`
	Code             *StatusCode                `protobuf:"varint,2,req,name=code,enum=ZPMeta.StatusCode" json:"code,omitempty"`
	Msg              *string                    `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
	Ping             *MetaCmdResponse_Ping      `protobuf:"bytes,4,opt,name=ping" json:"ping,omitempty"`
	Pull             *MetaCmdResponse_Pull      `protobuf:"bytes,5,opt,name=pull" json:"pull,omitempty"`
	ListTable        *MetaCmdResponse_ListTable `protobuf:"bytes,6,opt,name=list_table,json=listTable" json:"list_table,omitempty"`
	ListNode         *MetaCmdResponse_ListNode  `protobuf:"bytes,7,opt,name=list_node,json=listNode" json:"list_node,omitempty"`
	ListMeta         *MetaCmdResponse_ListMeta  `protobuf:"bytes,8,opt,name=list_meta,json=listMeta" json:"list_meta,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *MetaCmdResponse) Reset()                    { *m = MetaCmdResponse{} }
func (m *MetaCmdResponse) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdResponse) ProtoMessage()               {}
func (*MetaCmdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MetaCmdResponse) GetType() Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Type_PING
}

func (m *MetaCmdResponse) GetCode() StatusCode {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return StatusCode_OK
}

func (m *MetaCmdResponse) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *MetaCmdResponse) GetPing() *MetaCmdResponse_Ping {
	if m != nil {
		return m.Ping
	}
	return nil
}

func (m *MetaCmdResponse) GetPull() *MetaCmdResponse_Pull {
	if m != nil {
		return m.Pull
	}
	return nil
}

func (m *MetaCmdResponse) GetListTable() *MetaCmdResponse_ListTable {
	if m != nil {
		return m.ListTable
	}
	return nil
}

func (m *MetaCmdResponse) GetListNode() *MetaCmdResponse_ListNode {
	if m != nil {
		return m.ListNode
	}
	return nil
}

func (m *MetaCmdResponse) GetListMeta() *MetaCmdResponse_ListMeta {
	if m != nil {
		return m.ListMeta
	}
	return nil
}

// Ping
type MetaCmdResponse_Ping struct {
	Version          *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MetaCmdResponse_Ping) Reset()                    { *m = MetaCmdResponse_Ping{} }
func (m *MetaCmdResponse_Ping) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdResponse_Ping) ProtoMessage()               {}
func (*MetaCmdResponse_Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

func (m *MetaCmdResponse_Ping) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

// Pull
type MetaCmdResponse_Pull struct {
	Version          *int32   `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Info             []*Table `protobuf:"bytes,2,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MetaCmdResponse_Pull) Reset()                    { *m = MetaCmdResponse_Pull{} }
func (m *MetaCmdResponse_Pull) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdResponse_Pull) ProtoMessage()               {}
func (*MetaCmdResponse_Pull) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 1} }

func (m *MetaCmdResponse_Pull) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *MetaCmdResponse_Pull) GetInfo() []*Table {
	if m != nil {
		return m.Info
	}
	return nil
}

// ListTable
type MetaCmdResponse_ListTable struct {
	Tables           *TableName `protobuf:"bytes,1,opt,name=tables" json:"tables,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *MetaCmdResponse_ListTable) Reset()                    { *m = MetaCmdResponse_ListTable{} }
func (m *MetaCmdResponse_ListTable) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdResponse_ListTable) ProtoMessage()               {}
func (*MetaCmdResponse_ListTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 2} }

func (m *MetaCmdResponse_ListTable) GetTables() *TableName {
	if m != nil {
		return m.Tables
	}
	return nil
}

// ListNode
type MetaCmdResponse_ListNode struct {
	Nodes            *Nodes `protobuf:"bytes,1,opt,name=nodes" json:"nodes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MetaCmdResponse_ListNode) Reset()                    { *m = MetaCmdResponse_ListNode{} }
func (m *MetaCmdResponse_ListNode) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdResponse_ListNode) ProtoMessage()               {}
func (*MetaCmdResponse_ListNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 3} }

func (m *MetaCmdResponse_ListNode) GetNodes() *Nodes {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// ListMeta
type MetaCmdResponse_ListMeta struct {
	Nodes            *MetaNodes `protobuf:"bytes,1,req,name=nodes" json:"nodes,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *MetaCmdResponse_ListMeta) Reset()                    { *m = MetaCmdResponse_ListMeta{} }
func (m *MetaCmdResponse_ListMeta) String() string            { return proto.CompactTextString(m) }
func (*MetaCmdResponse_ListMeta) ProtoMessage()               {}
func (*MetaCmdResponse_ListMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 4} }

func (m *MetaCmdResponse_ListMeta) GetNodes() *MetaNodes {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "ZPMeta.Node")
	proto.RegisterType((*NodeStatus)(nil), "ZPMeta.NodeStatus")
	proto.RegisterType((*Nodes)(nil), "ZPMeta.Nodes")
	proto.RegisterType((*MetaNodes)(nil), "ZPMeta.MetaNodes")
	proto.RegisterType((*Partitions)(nil), "ZPMeta.Partitions")
	proto.RegisterType((*TableName)(nil), "ZPMeta.TableName")
	proto.RegisterType((*Table)(nil), "ZPMeta.Table")
	proto.RegisterType((*BasicCmdUnit)(nil), "ZPMeta.BasicCmdUnit")
	proto.RegisterType((*SyncOffset)(nil), "ZPMeta.SyncOffset")
	proto.RegisterType((*MetaCmd)(nil), "ZPMeta.MetaCmd")
	proto.RegisterType((*MetaCmd_Ping)(nil), "ZPMeta.MetaCmd.Ping")
	proto.RegisterType((*MetaCmd_Pull)(nil), "ZPMeta.MetaCmd.Pull")
	proto.RegisterType((*MetaCmd_Init)(nil), "ZPMeta.MetaCmd.Init")
	proto.RegisterType((*MetaCmd_SetMaster)(nil), "ZPMeta.MetaCmd.SetMaster")
	proto.RegisterType((*MetaCmd_AddSlave)(nil), "ZPMeta.MetaCmd.AddSlave")
	proto.RegisterType((*MetaCmd_RemoveSlave)(nil), "ZPMeta.MetaCmd.RemoveSlave")
	proto.RegisterType((*MetaCmd_DropTable)(nil), "ZPMeta.MetaCmd.DropTable")
	proto.RegisterType((*MetaCmdResponse)(nil), "ZPMeta.MetaCmdResponse")
	proto.RegisterType((*MetaCmdResponse_Ping)(nil), "ZPMeta.MetaCmdResponse.Ping")
	proto.RegisterType((*MetaCmdResponse_Pull)(nil), "ZPMeta.MetaCmdResponse.Pull")
	proto.RegisterType((*MetaCmdResponse_ListTable)(nil), "ZPMeta.MetaCmdResponse.ListTable")
	proto.RegisterType((*MetaCmdResponse_ListNode)(nil), "ZPMeta.MetaCmdResponse.ListNode")
	proto.RegisterType((*MetaCmdResponse_ListMeta)(nil), "ZPMeta.MetaCmdResponse.ListMeta")
	proto.RegisterEnum("ZPMeta.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("ZPMeta.Type", Type_name, Type_value)
	proto.RegisterEnum("ZPMeta.PState", PState_name, PState_value)
}

func init() { proto.RegisterFile("zp_meta.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1019 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0x6d, 0x6f, 0xe3, 0x44,
	0x10, 0xc6, 0x8e, 0xed, 0xc6, 0xd3, 0x97, 0x33, 0x2b, 0x84, 0x8c, 0x39, 0xd4, 0x9c, 0x39, 0x41,
	0x88, 0xa0, 0x1c, 0x45, 0x1c, 0x20, 0x01, 0x22, 0x97, 0xf8, 0x50, 0x74, 0x69, 0x12, 0x6d, 0xdc,
	0x7e, 0x40, 0x42, 0x91, 0x5b, 0x6f, 0x2b, 0x4b, 0x8e, 0x6d, 0xd9, 0x6e, 0x51, 0xe1, 0x2f, 0x20,
	0x3e, 0xf2, 0x6f, 0xf8, 0x6f, 0x68, 0x76, 0xd7, 0x2f, 0x2d, 0x49, 0xef, 0xee, 0xdb, 0x6c, 0xe6,
	0x79, 0x76, 0x67, 0x76, 0x9e, 0x67, 0x1d, 0xd8, 0xff, 0x23, 0x5b, 0xad, 0x59, 0x19, 0x1c, 0x65,
	0x79, 0x5a, 0xa6, 0xc4, 0xf8, 0x75, 0x71, 0xc2, 0xca, 0xc0, 0x1d, 0x80, 0x36, 0x4b, 0x43, 0x46,
	0x0e, 0x40, 0x8d, 0x32, 0x5b, 0xe9, 0xa9, 0x7d, 0x93, 0xaa, 0x51, 0x46, 0x08, 0x68, 0x59, 0x9a,
	0x97, 0xb6, 0xda, 0x53, 0xfb, 0x3a, 0xe5, 0xb1, 0xfb, 0x12, 0x00, 0xb1, 0xcb, 0x32, 0x28, 0xaf,
	0x0b, 0xd2, 0x03, 0x2d, 0x49, 0x43, 0xc6, 0x39, 0xbb, 0xc7, 0x7b, 0x47, 0x62, 0xc3, 0x23, 0x44,
	0x50, 0x9e, 0x21, 0xef, 0x83, 0x51, 0x70, 0xac, 0xdc, 0x45, 0xae, 0xdc, 0xaf, 0x40, 0x47, 0x54,
	0x41, 0xfa, 0xa0, 0x23, 0xb0, 0xb0, 0x95, 0x5e, 0xa7, 0xbf, 0x7b, 0x4c, 0xda, 0x7b, 0x88, 0x53,
	0xa8, 0x00, 0xb8, 0xbf, 0x81, 0x89, 0x19, 0x41, 0x1b, 0x80, 0x79, 0x99, 0xc6, 0x71, 0xfa, 0x3b,
	0xcb, 0x2b, 0xea, 0xdd, 0xe3, 0x9b, 0x34, 0x79, 0x0a, 0x46, 0xcc, 0x82, 0x90, 0xe5, 0xb6, 0xda,
	0x53, 0xfe, 0x07, 0x94, 0x39, 0xf7, 0x6f, 0x05, 0x60, 0x11, 0xe4, 0x65, 0x54, 0x46, 0x69, 0x52,
	0xf0, 0xcb, 0x08, 0x79, 0x63, 0x3a, 0x55, 0xa3, 0x90, 0x3c, 0x05, 0x1d, 0x4b, 0x67, 0xbc, 0x8f,
	0x83, 0xe3, 0x83, 0x6a, 0x8f, 0x05, 0x16, 0xc9, 0xa8, 0x48, 0xe2, 0x51, 0xeb, 0xa0, 0x28, 0x59,
	0x6e, 0x77, 0x36, 0x5c, 0x89, 0xcc, 0x21, 0xaa, 0x88, 0x83, 0x1b, 0x56, 0xd8, 0xda, 0x86, 0xca,
	0x65, 0xce, 0x3d, 0x04, 0xd3, 0x0f, 0xce, 0x63, 0x36, 0x0b, 0xd6, 0x0c, 0x67, 0x91, 0x04, 0x6b,
	0xc6, 0x5b, 0x35, 0x29, 0x8f, 0xdd, 0x39, 0xe8, 0x1c, 0xd0, 0x4a, 0xaa, 0x55, 0x92, 0x1c, 0x03,
	0x64, 0x75, 0x37, 0xb6, 0x7a, 0xf7, 0x72, 0x9b, 0x3e, 0x69, 0x0b, 0xe5, 0x9e, 0xc3, 0xde, 0x8b,
	0xa0, 0x88, 0x2e, 0x46, 0xeb, 0xf0, 0x34, 0x89, 0xca, 0x8d, 0xfb, 0x3e, 0x06, 0xb3, 0x66, 0xc8,
	0x99, 0x36, 0x3f, 0xd4, 0x82, 0xe8, 0x6c, 0x13, 0x84, 0xfb, 0x27, 0xc0, 0xf2, 0x36, 0xb9, 0x98,
	0x5f, 0x5e, 0x16, 0xac, 0x24, 0x1f, 0x01, 0x94, 0xd8, 0xc2, 0xaa, 0x75, 0x8e, 0x59, 0xd6, 0x5d,
	0x3f, 0x7c, 0x98, 0x0d, 0x3b, 0x97, 0x51, 0xcc, 0x92, 0xeb, 0xb5, 0xdd, 0xe9, 0x29, 0x7d, 0x9d,
	0x56, 0x4b, 0x54, 0x5d, 0xca, 0x0f, 0xb0, 0xb5, 0x9e, 0xd2, 0xef, 0x50, 0xb9, 0x72, 0xff, 0x35,
	0x60, 0x07, 0x0b, 0x1a, 0xad, 0x43, 0x2c, 0xb5, 0xbc, 0xcd, 0xc4, 0xa1, 0x07, 0x4d, 0xa9, 0xfe,
	0x6d, 0xc6, 0x28, 0xcf, 0x90, 0x3e, 0x68, 0x59, 0x94, 0x5c, 0x49, 0xd5, 0xbc, 0x57, 0x21, 0xe4,
	0x06, 0x47, 0x8b, 0x28, 0xb9, 0xa2, 0x1c, 0xc1, 0x91, 0xd7, 0x71, 0xcc, 0xcb, 0xd8, 0x84, 0xbc,
	0x8e, 0x63, 0xca, 0x11, 0x88, 0x8c, 0x92, 0x48, 0xd4, 0xb5, 0x01, 0x39, 0x49, 0xa2, 0x92, 0x72,
	0x04, 0xf9, 0x0e, 0xa0, 0x60, 0xe5, 0x4a, 0xca, 0x49, 0xe7, 0xf8, 0x0f, 0xee, 0xe3, 0x97, 0xac,
	0x3c, 0xe1, 0x00, 0x6a, 0x16, 0x55, 0x48, 0xbe, 0x01, 0x33, 0x08, 0xc3, 0x15, 0x97, 0x91, 0x6d,
	0x70, 0xa2, 0x7d, 0x9f, 0x38, 0x0c, 0xc3, 0x25, 0xe6, 0x69, 0x37, 0x90, 0x11, 0xf9, 0x09, 0xf6,
	0x72, 0xb6, 0x4e, 0x6f, 0x98, 0x64, 0xee, 0x70, 0xe6, 0x87, 0xf7, 0x99, 0x94, 0x63, 0x04, 0x79,
	0x37, 0x6f, 0x16, 0x58, 0x70, 0x98, 0xa7, 0xd9, 0x8a, 0x8f, 0xcf, 0xee, 0x6e, 0x2e, 0x78, 0x9c,
	0xa7, 0x19, 0x17, 0x2d, 0x35, 0xc3, 0x2a, 0x74, 0x12, 0xd0, 0xf0, 0x32, 0x71, 0xa0, 0x37, 0x2c,
	0x2f, 0x70, 0xd8, 0xc2, 0x78, 0xd5, 0xb2, 0xd6, 0x95, 0xba, 0xf5, 0xa1, 0x19, 0xd4, 0x23, 0xef,
	0xdc, 0xd5, 0x7a, 0xa3, 0xb6, 0x4a, 0x06, 0xce, 0x0f, 0xa0, 0xe1, 0x48, 0x5a, 0xcf, 0x97, 0xb2,
	0x65, 0xd7, 0xca, 0x01, 0x28, 0x01, 0xe9, 0x00, 0xe7, 0x73, 0xd0, 0x26, 0xdb, 0xdc, 0x61, 0x41,
	0x07, 0xe5, 0x28, 0xa4, 0x8a, 0xa1, 0xf3, 0x2d, 0x98, 0xf5, 0x90, 0xc8, 0x00, 0xf4, 0x73, 0x34,
	0x98, 0x7c, 0x30, 0xeb, 0xf1, 0xb7, 0x5d, 0x47, 0x05, 0xc4, 0x79, 0x0e, 0xdd, 0x6a, 0x48, 0x6f,
	0xc5, 0xfb, 0x1e, 0x76, 0x5b, 0x23, 0x7a, 0x2b, 0xea, 0x21, 0x98, 0xf5, 0x7c, 0x36, 0xb5, 0xe7,
	0xfe, 0xa3, 0xc3, 0x23, 0x39, 0x49, 0xca, 0x8a, 0x2c, 0x4d, 0x0a, 0xf6, 0x06, 0x3e, 0xfa, 0x04,
	0xb4, 0x8b, 0x6a, 0x78, 0x07, 0xad, 0xc1, 0xf0, 0xd7, 0x7d, 0xc4, 0x2f, 0x1b, 0xf3, 0x78, 0x79,
	0xeb, 0xe2, 0x8a, 0x9b, 0xc8, 0xa4, 0x18, 0x92, 0x67, 0xd2, 0x81, 0xc2, 0x2d, 0x8f, 0xef, 0x89,
	0xa9, 0x2a, 0xa1, 0xed, 0xc4, 0x67, 0xd2, 0x89, 0xfa, 0x6b, 0x18, 0x8d, 0x23, 0x7f, 0x06, 0x88,
	0xa3, 0xa2, 0x94, 0xb2, 0x15, 0x76, 0x79, 0xb2, 0x8d, 0x37, 0x8d, 0x8a, 0x52, 0xca, 0x37, 0xae,
	0x42, 0xf2, 0x23, 0xf0, 0xc5, 0x8a, 0x6b, 0x49, 0xb8, 0xa6, 0xf7, 0xd0, 0x06, 0x5c, 0x5f, 0xdd,
	0x58, 0x46, 0x35, 0x1d, 0xbf, 0xcc, 0xd2, 0x36, 0x0f, 0xd2, 0xf1, 0x37, 0x41, 0xc7, 0xc8, 0xe9,
	0xbd, 0xce, 0x3c, 0xce, 0x48, 0xca, 0x7d, 0xbb, 0xbd, 0x9e, 0xe0, 0xab, 0x74, 0x99, 0xca, 0xcf,
	0xc4, 0x7e, 0x3d, 0x43, 0xde, 0x29, 0x4f, 0x39, 0xcf, 0xc1, 0xac, 0x9b, 0x27, 0x9f, 0x81, 0xc1,
	0xaf, 0xab, 0x90, 0xd6, 0x79, 0xf7, 0x0e, 0x03, 0x9f, 0x6e, 0x2a, 0x01, 0xce, 0x97, 0xd0, 0xad,
	0x7a, 0x26, 0x1f, 0x37, 0xdf, 0x7a, 0xa5, 0x7d, 0x0e, 0xff, 0xa4, 0xcb, 0xcf, 0xbc, 0xf3, 0xb5,
	0x20, 0x60, 0x82, 0x7c, 0xda, 0x10, 0xd4, 0xf6, 0x31, 0xf5, 0xff, 0x00, 0x49, 0x1a, 0x7c, 0x01,
	0xd0, 0xc8, 0x89, 0x18, 0xa0, 0xce, 0x5f, 0x59, 0xef, 0x90, 0x3d, 0xe8, 0xce, 0xe6, 0xfe, 0xcb,
	0xf9, 0xe9, 0x6c, 0x6c, 0x29, 0xc4, 0x04, 0xdd, 0xa3, 0x74, 0x4e, 0x2d, 0x75, 0xf0, 0x97, 0x02,
	0x1a, 0x0a, 0x94, 0x74, 0x41, 0x5b, 0x4c, 0x66, 0xbf, 0x58, 0x0a, 0x8f, 0x4e, 0xa7, 0x53, 0x4b,
	0xc5, 0x68, 0x32, 0x9b, 0xf8, 0x56, 0x87, 0xec, 0x83, 0xb9, 0xf4, 0xfc, 0x93, 0xe1, 0xd2, 0xf7,
	0xa8, 0xa5, 0xe1, 0x76, 0xc3, 0xf1, 0x78, 0x39, 0x1d, 0x9e, 0x79, 0x96, 0x4e, 0x1e, 0xc1, 0x2e,
	0xf5, 0x4e, 0xe6, 0x67, 0x9e, 0xf8, 0xc1, 0x40, 0xf4, 0x74, 0xb2, 0xf4, 0xfd, 0xe1, 0x8b, 0xa9,
	0x67, 0xed, 0x20, 0x1a, 0x97, 0xb3, 0xf9, 0xd8, 0xb3, 0xba, 0xd5, 0xea, 0xc4, 0xf3, 0x87, 0x96,
	0x89, 0xd0, 0x31, 0x9d, 0x2f, 0x04, 0x14, 0x06, 0x87, 0x60, 0x88, 0xbf, 0x11, 0x04, 0xc0, 0x18,
	0x8e, 0xfc, 0xc9, 0x99, 0x27, 0xea, 0x5d, 0xfa, 0xa7, 0xa3, 0x57, 0x96, 0xfa, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc0, 0x9f, 0x30, 0x1f, 0xb9, 0x09, 0x00, 0x00,
}
